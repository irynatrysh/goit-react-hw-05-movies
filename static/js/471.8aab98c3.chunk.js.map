{"version":3,"file":"static/js/471.8aab98c3.chunk.js","mappings":"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","sources":["Api/Api.jsx","Pages/MoviesDetails/MoviesDetailsStyled.jsx","Pages/MoviesDetails/MoviesDetails.jsx","components/Loader/LoaderStyled.jsx","components/Loader/Loader.jsx","components/Reviews/ReviewsStyled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '12c32cf6e2f1b9ee11784c9e34961f238';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`/trending/all/day?api_key=${apiKey}`);\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies', error);\n    throw error;\n  }\n};\n\nexport const searchFilm = async query => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error fetching searchFilm', error);\n    throw error;\n  }\n};\n\nexport const getFilm = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}?api_key=${apiKey}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details', error);\n    throw error;\n  }\n};\n\nexport const getCasts = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n    console.log('Casts data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching casts', error);\n    throw error;\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/reviews?api_key=${apiKey}&language=en-US`\n    );\n    console.log('Reviews data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching reviews', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nimport { TbArrowBackUp } from 'react-icons/tb';\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled('div')`\n  margin-top: 25px;\n  position: relative;\n`;\nexport const BtnBack = styled('button')`\n  position: absolute;\n  position: fixed;\n  padding: 10px;\n  margin-left: 25px;\n  height: 70px;\n  width: 70px;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: rgba(255, 255, 255, 0.5);\n  border: 5px solid indigo;\n  &:hover {\n    background-color: #b3d3ea;\n    color: #2c5777;\n  }\n  &:focus {\n    box-shadow: 0 0 0 4px rgba(0, 149, 255, 0.15);\n  }\n  &:active {\n    background-color: #a0c7e4;\n    box-shadow: none;\n    color: #2c5777;\n  }\n`;\nexport const Container = styled('div')`\n  display: flex;\n  margin: 0 auto;\n  margin-bottom: 15px;\n  border-radius: 20px;\n  box-shadow: 9px 10px 8px -10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dfe5ed;\n  background-color: #fff;\n  max-width: 1100px;\n  overflow: hidden;\n`;\n// export const MainContainer = styled('div')``;\nexport const Poster = styled('img')`\n  max-width: 350px;\n  object-fit: contain;\n  box-shadow: rgba(0, 0, 0, 0.4) -12px 10px 16px 16px;\n`;\nexport const DetailContainer = styled('div')`\n  margin: 0 30px 0 30px;\n  padding: 15px;\n`;\nexport const FilmTitle = styled('h2')`\n  display: flex;\n  font-size: 35px;\n  justify-content: center;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #000;\n`;\nexport const DetailTitle = styled('h3')`\n  font-size: 25px;\n  justify-content: center;\n  padding-left: 25px;\n`;\nexport const DetailText = styled('div')`\n  font-size: 20px;\n  justify-content: center;\n`;\nexport const GenresList = styled('ul')`\n  display: flex;\n  gap: 4px;\n  padding-left: 0;\n`;\nexport const GenresItem = styled('li')`\n  display: flex;\n  flex-basis: calc((100% - 3 * 35px) / 4);\n`;\nexport const CastListStyled = styled('ul')`\n  display: flex;\n  margin-top: 30px;\n  gap: 35px;\n  padding-left: 0;\n`;\nexport const IconBack = styled(TbArrowBackUp)`\n  margin: 0 auto;\n  stroke: #273563;\n`;\nexport const ListCastRe = styled(Link)`\n  font-size: 20px;\n  display: flex;\n  padding: 10px;\n  width: 90px;\n  justify-content: center;\n  align-items: center;\n  background-color: #e1ecf4;\n  border-radius: 3px;\n  border: 1px solid #7aa7c7;\n  box-shadow: rgba(255, 255, 255, 0.7) 0 1px 0 0 inset;\n  box-sizing: border-box;\n  color: #39739d;\n  &:hover {\n    background-color: #b3d3ea;\n    color: #2c5777;\n  }\n  &:focus {\n    box-shadow: 0 0 0 4px rgba(0, 149, 255, 0.15);\n  }\n  &:active {\n    background-color: #a0c7e4;\n    box-shadow: none;\n    color: #2c5777;\n  }\n`;\nexport const LoaderDiv = styled('div')`\n  display: flex;\n  padding: 20px;\n  color: #273563;\n  font-size: 20px;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getFilm } from 'Api/Api';\nimport {\n  BtnBack,\n  CastListStyled,\n  Container,\n  DetailContainer,\n  DetailText,\n  DetailTitle,\n  FilmTitle,\n  GenresList,\n  IconBack,\n  ListCastRe,\n  LoaderDiv,\n  MainContainer,\n  Poster,\n} from './MoviesDetailsStyled';\nimport { Loader } from 'components/Loader/Loader';\nimport { NotResultsText } from 'components/Reviews/ReviewsStyled';\n\nexport const MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await getFilm(id);\n        setMovie(movieDetails);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return (\n      <LoaderDiv>\n        {isLoading && <Loader />}\n        <NotResultsText>We are loading movies</NotResultsText>\n      </LoaderDiv>\n    );\n  }\n  return (\n    <>\n      <MainContainer>\n        {isLoading && (\n          <LoaderDiv>\n            <Loader />\n          </LoaderDiv>\n        )}\n        <Link to={backLink} state={location}>\n          <BtnBack type=\"button\">\n            <IconBack size=\"40\" />\n          </BtnBack>\n        </Link>\n        <Container>\n          <Poster\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <ul>\n            <DetailContainer>\n              <li>\n                <FilmTitle>{movie.title}</FilmTitle>\n              </li>\n              <li>\n                <DetailTitle>Overview</DetailTitle>{' '}\n                <DetailText>{movie.overview}</DetailText>\n              </li>\n\n              <li>\n                <DetailTitle>Genres</DetailTitle>\n\n                <GenresList>\n                  {movie.genres.map(({ id, name }) => {\n                    return <DetailText key={id}>{name} /</DetailText>;\n                  })}\n                </GenresList>\n              </li>\n              <li>\n                <div>\n                  <CastListStyled>\n                    <li>\n                      <ListCastRe to={`/movies/${id}/cast`}>Cast</ListCastRe>\n                    </li>\n                    <li>\n                      {\n                        <ListCastRe to={`/movies/${id}/reviews`}>\n                          Reviews\n                        </ListCastRe>\n                      }\n                    </li>\n                  </CastListStyled>\n                </div>\n              </li>\n            </DetailContainer>\n          </ul>\n        </Container>\n\n        <Outlet />\n      </MainContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinerStyled = styled('div')`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinerStyled } from 'components/Loader/LoaderStyled';\nexport const Loader = () => {\n  return (\n    <SpinerStyled>\n      <RotatingLines\n        strokeColor=\"#4b0082\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </SpinerStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Maindiv = styled('div')`\n  display: flex;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 20px;\n  box-shadow: 9px 10px 8px -10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dfe5ed;\n  background-color: #fff;\n  max-width: 1100px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ReList = styled('ul')`\n  padding: 10px 40px 10px 40px;\n`;\nexport const ReText = styled('p')`\n  color: #122236;\n  text-align: justify;\n`;\nexport const NotResultsText = styled('p')`\n  display: flex;\n  color: #122236;\n`;\n"],"names":["apiKey","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","t0","console","error","stop","apply","arguments","searchFilm","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getFilm","_ref3","_callee3","id","_yield$axios$get3","_context3","_x2","getCasts","_ref4","_callee4","_yield$axios$get4","_context4","log","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","MainContainer","styled","_templateObject","_taggedTemplateLiteral","BtnBack","_templateObject2","Container","_templateObject3","Poster","_templateObject4","DetailContainer","_templateObject5","FilmTitle","_templateObject6","DetailTitle","_templateObject7","DetailText","_templateObject8","GenresList","_templateObject9","CastListStyled","_templateObject10","_templateObject11","IconBack","TbArrowBackUp","_templateObject12","ListCastRe","Link","_templateObject13","LoaderDiv","_templateObject14","MovieDetails","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","backLink","state","from","useEffect","fetchMovieDetails","movieDetails","finish","_jsx","_Fragment","children","_jsxs","Loader","to","type","size","src","poster_path","alt","title","overview","genres","map","name","Outlet","NotResultsText","SpinerStyled","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","Maindiv","ReList","ReText"],"sourceRoot":""}