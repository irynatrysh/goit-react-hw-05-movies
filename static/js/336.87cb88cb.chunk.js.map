{"version":3,"file":"static/js/336.87cb88cb.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","components/Loader/LoaderStyled.jsx","components/Loader/Loader.jsx","components/Reviews/ReviewsStyled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '12c32cf6e2f1b9ee11784c9e34961f238';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`/trending/all/day?api_key=${apiKey}`);\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending movies', error);\n    throw error;\n  }\n};\n\nexport const searchFilm = async query => {\n  try {\n    const { data } = await axios.get(\n      `/search/movie?api_key=${apiKey}&language=en-US&query=${query}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error fetching searchFilm', error);\n    throw error;\n  }\n};\n\nexport const getFilm = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}?api_key=${apiKey}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details', error);\n    throw error;\n  }\n};\n\nexport const getCasts = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n    console.log('Casts data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching casts', error);\n    throw error;\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/reviews?api_key=${apiKey}&language=en-US`\n    );\n    console.log('Reviews data:', data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching reviews', error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled('ul')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 40px;\n  row-gap: 50px;\n  align-items: center;\n  justify-content: center;\n  padding-left: 0;\n  padding-bottom: 20px;\n`;\nexport const CastItem = styled('li')`\n  width: 200px;\n  height: 310px;\n`;\n\nexport const PhotoContainer = styled('div')`\n  height: 200px;\n  width: 200px;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 5px;\n`;\nexport const Photo = styled('img')`\n  width: 200px;\n  height: auto;\n\n  object-fit: cover;\n`;\n\nexport const CastContainer = styled('div')`\n  display: flex;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 20px;\n  box-shadow: 9px 10px 8px -10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dfe5ed;\n  background-color: #fff;\n  max-width: 1100px;\n  overflow: hidden;\n  margin-bottom: 20px;\n`;\nexport const ActorNameDiv = styled('div')`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  height: 110px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 20px;\n  box-shadow: 9px 10px 8px -10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dfe5ed;\n  background-color: rgb(225, 236, 244);\n`;\nexport const ActorName = styled('p')`\n  display: flex;\n  margin: 0 auto;\n  text-align: center;\n  color: rgb(57, 115, 157);\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\nexport const Character = styled('p')`\n  display: flex;\n  margin: 0 auto;\n  text-align: center;\n  color: rgb(57, 115, 157);\n`;\n","import { getCasts } from 'Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastList,\n  Photo,\n  CastContainer,\n  PhotoContainer,\n  CastItem,\n  ActorNameDiv,\n  ActorName,\n  Character,\n} from './CastStyled';\nimport { Maindiv, NotResultsText } from 'components/Reviews/ReviewsStyled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const Cast = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      try {\n        setIsLoading(true);\n        const getActors = await getCasts(id);\n        setActors(getActors);\n      } catch (error) {\n        console.error('Error fetching casts', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCasts();\n  }, [id]);\n  if (isLoading) {\n    return (\n      <Maindiv>\n        {isLoading && <Loader />}\n        <NotResultsText>We are loading the cast of this movie</NotResultsText>\n      </Maindiv>\n    );\n  }\n  if (!actors || !actors.cast || actors.cast.length === 0) {\n    return (\n      <Maindiv>\n        {isLoading && <Loader />}\n        <NotResultsText>\n          Unfortunately, we do not have data on the cast of this film. We\n          apologize\n        </NotResultsText>\n      </Maindiv>\n    );\n  }\n  const unknownImg =\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/694px-Unknown_person.jpg';\n  return (\n    <>\n      <CastContainer>\n        <CastList>\n          {actors.cast.map(({ id, profile_path, name, character }) => (\n            <CastItem key={id}>\n              <PhotoContainer>\n                <Photo\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : unknownImg\n                  }\n                  alt={name}\n                  width={250}\n                />\n              </PhotoContainer>\n              <ActorNameDiv>\n                <ActorName>{name}</ActorName>\n                <Character>\n                  Character: <br />\n                  {character}\n                </Character>\n              </ActorNameDiv>\n            </CastItem>\n          ))}\n        </CastList>\n      </CastContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SpinerStyled = styled('div')`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinerStyled } from 'components/Loader/LoaderStyled';\nexport const Loader = () => {\n  return (\n    <SpinerStyled>\n      <RotatingLines\n        strokeColor=\"#4b0082\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </SpinerStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Maindiv = styled('div')`\n  display: flex;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 20px;\n  box-shadow: 9px 10px 8px -10px rgba(0, 0, 0, 0.1);\n  border: 1px solid #dfe5ed;\n  background-color: #fff;\n  max-width: 1100px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ReList = styled('ul')`\n  padding: 10px 40px 10px 40px;\n`;\nexport const ReText = styled('p')`\n  color: #122236;\n  text-align: justify;\n`;\nexport const NotResultsText = styled('p')`\n  display: flex;\n  color: #122236;\n`;\n"],"names":["apiKey","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","t0","console","error","stop","apply","arguments","searchFilm","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getFilm","_ref3","_callee3","id","_yield$axios$get3","_context3","_x2","getCasts","_ref4","_callee4","_yield$axios$get4","_context4","log","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","PhotoContainer","_templateObject3","Photo","_templateObject4","CastContainer","_templateObject5","ActorNameDiv","_templateObject6","ActorName","_templateObject7","Character","_templateObject8","Cast","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchCasts","getActors","finish","_jsxs","Maindiv","children","_jsx","Loader","NotResultsText","cast","length","_Fragment","map","profile_path","name","character","src","alt","width","SpinerStyled","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","ReList","ReText"],"sourceRoot":""}